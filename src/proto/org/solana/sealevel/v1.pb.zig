// Code generated by protoc-gen-zig
///! package org.solana.sealevel.v1
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const FeatureSet = struct {
    features: ArrayList(u64),

    pub const _desc_table = .{
        .features = fd(1, .{ .PackedList = .{ .FixedInt = .I64 } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SeedAddress = struct {
    base: ManagedString = .Empty,
    seed: ManagedString = .Empty,
    owner: ManagedString = .Empty,

    pub const _desc_table = .{
        .base = fd(1, .Bytes),
        .seed = fd(2, .Bytes),
        .owner = fd(3, .Bytes),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcctState = struct {
    address: ManagedString = .Empty,
    lamports: u64 = 0,
    data: ManagedString = .Empty,
    executable: bool = false,
    rent_epoch: u64 = 0,
    owner: ManagedString = .Empty,
    seed_addr: ?SeedAddress = null,

    pub const _desc_table = .{
        .address = fd(1, .Bytes),
        .lamports = fd(2, .{ .Varint = .Simple }),
        .data = fd(3, .Bytes),
        .executable = fd(4, .{ .Varint = .Simple }),
        .rent_epoch = fd(5, .{ .Varint = .Simple }),
        .owner = fd(6, .Bytes),
        .seed_addr = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EpochContext = struct {
    features: ?FeatureSet = null,

    pub const _desc_table = .{
        .features = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SlotContext = struct {
    slot: u64 = 0,

    pub const _desc_table = .{
        .slot = fd(1, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FixtureMetadata = struct {
    fn_entrypoint: ManagedString = .Empty,

    pub const _desc_table = .{
        .fn_entrypoint = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELFBinary = struct {
    data: ManagedString = .Empty,

    pub const _desc_table = .{
        .data = fd(1, .Bytes),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELFLoaderCtx = struct {
    elf: ?ELFBinary = null,
    features: ?FeatureSet = null,
    elf_sz: u64 = 0,
    deploy_checks: bool = false,

    pub const _desc_table = .{
        .elf = fd(1, .{ .SubMessage = {} }),
        .features = fd(2, .{ .SubMessage = {} }),
        .elf_sz = fd(3, .{ .Varint = .Simple }),
        .deploy_checks = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELFLoaderEffects = struct {
    rodata: ManagedString = .Empty,
    rodata_sz: u64 = 0,
    text_cnt: u64 = 0,
    text_off: u64 = 0,
    entry_pc: u64 = 0,
    calldests: ArrayList(u64),

    pub const _desc_table = .{
        .rodata = fd(1, .Bytes),
        .rodata_sz = fd(2, .{ .Varint = .Simple }),
        .text_cnt = fd(4, .{ .Varint = .Simple }),
        .text_off = fd(5, .{ .Varint = .Simple }),
        .entry_pc = fd(6, .{ .Varint = .Simple }),
        .calldests = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELFLoaderFixture = struct {
    metadata: ?FixtureMetadata = null,
    input: ?ELFLoaderCtx = null,
    output: ?ELFLoaderEffects = null,

    pub const _desc_table = .{
        .metadata = fd(1, .{ .SubMessage = {} }),
        .input = fd(2, .{ .SubMessage = {} }),
        .output = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
